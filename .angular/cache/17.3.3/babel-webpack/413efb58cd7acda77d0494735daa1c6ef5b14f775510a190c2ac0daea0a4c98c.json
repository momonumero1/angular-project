{"ast":null,"code":"import { interval } from 'rxjs';\nimport { State } from '../models/state.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./board.service\";\nimport * as i2 from \"../template/template.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../neon-button/neon-button.component\";\nimport * as i6 from \"../toogle-buttons/toogle-buttons.component\";\nconst _c0 = [\"pixiContainer\"];\nconst _c1 = a0 => ({\n  \"background-color\": a0\n});\nfunction BoardComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"button\", 15);\n    i0.ɵɵlistener(\"mouseover\", function BoardComponent_ng_container_6_Template_button_mouseover_1_listener() {\n      const cat_r3 = i0.ɵɵrestoreView(_r2).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onMouseOverCategory(cat_r3));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const cat_r3 = ctx.$implicit;\n    i0.ɵɵnextContext();\n    const category_r5 = i0.ɵɵreference(8);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"matMenuTriggerFor\", category_r5);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(cat_r3);\n  }\n}\nfunction BoardComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function BoardComponent_button_9_Template_button_click_0_listener() {\n      const t_r7 = i0.ɵɵrestoreView(_r6).$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onMenuTemplate(t_r7));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r7 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(t_r7.name);\n  }\n}\nfunction BoardComponent_tr_20_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 18);\n    i0.ɵɵlistener(\"mouseover\", function BoardComponent_tr_20_td_1_Template_td_mouseover_0_listener($event) {\n      const c_r9 = i0.ɵɵrestoreView(_r8).index;\n      const r_r10 = i0.ɵɵnextContext().index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onToggleMouseOver(r_r10, c_r9, $event));\n    })(\"click\", function BoardComponent_tr_20_td_1_Template_td_click_0_listener($event) {\n      const c_r9 = i0.ɵɵrestoreView(_r8).index;\n      const r_r10 = i0.ɵɵnextContext().index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onToggleClick(r_r10, c_r9, $event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const c_r9 = ctx.index;\n    const r_r10 = i0.ɵɵnextContext().index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(1, _c1, ctx_r3.getCellColor(ctx_r3.grid[r_r10][c_r9])));\n  }\n}\nfunction BoardComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, BoardComponent_tr_20_td_1_Template, 1, 3, \"td\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r11 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", row_r11);\n  }\n}\nfunction BoardComponent_option_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ruleStr_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", ruleStr_r12);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ruleStr_r12, \" \");\n  }\n}\nfunction BoardComponent_gol_neon_button_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"gol-neon-button\", 20);\n    i0.ɵɵlistener(\"click\", function BoardComponent_gol_neon_button_32_Template_gol_neon_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onRunAnimation());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BoardComponent_gol_neon_button_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"gol-neon-button\", 21);\n    i0.ɵɵlistener(\"click\", function BoardComponent_gol_neon_button_33_Template_gol_neon_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onStopAnimation());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nexport let BoardComponent = /*#__PURE__*/(() => {\n  class BoardComponent {\n    constructor(boardService, templateService) {\n      this.boardService = boardService;\n      this.templateService = templateService;\n      this.speeds = [{\n        name: 'Rapide',\n        value: 100\n      }, {\n        name: 'Moyenne',\n        value: 250\n      }, {\n        name: 'Lente',\n        value: 500\n      }];\n      this.speed = {\n        name: 'Rapide',\n        value: 100\n      };\n      this.colorModes = [{\n        name: 'Classique'\n      }, {\n        name: 'Evolué'\n      }, {\n        name: 'HeatMap'\n      }];\n      this.colorMode = {\n        name: 'Classique'\n      };\n      this.categories = [];\n      this.running = false;\n      this.grid = [];\n      this.population = 0;\n      this.rulesStr = [];\n      this.selectedRuleStr = 'Conway';\n      this.generationNumber = 0;\n      this.maxHistoryValue = 0;\n    }\n    ngOnInit() {\n      /* PIXI\n      this.pApp = new PIXI.Application({ width: 600, height: 600 });\n      this.pixiContainer.nativeElement.appendChild(this.pApp.view);\n      const graphics = new PIXI.Graphics();\n           const Grid = defineGrid(extendHex({\n        size:50,\n        orientation: 'flat'\n      }));\n           document.body.appendChild(this.pApp.view);\n      // set a line style of 1px wide and color #999\n      graphics.lineStyle(1, 0x999999);\n           // render 10,000 hexes\n      Grid.rectangle({ width: 10, height: 10 }).forEach(hex => {\n          const point = hex.toPoint();\n          // add the hex's position to each of its corner points\n          const corners = hex.corners().map(corner => corner.add(point));\n          // separate the first from the other corners\n          const [firstCorner, ...otherCorners] = corners;\n               // move the \"pen\" to the first corner\n          graphics.moveTo(firstCorner.x, firstCorner.y);\n          // draw lines to the other corners\n          otherCorners.forEach(({ x, y }) => graphics.lineTo(x, y));\n          // finish at the first corner\n          graphics.lineTo(firstCorner.x, firstCorner.y);\n               this.pApp.stage.addChild(graphics);\n           });\n       \n      */\n      this.gridSubcription = this.boardService.boardSubject.subscribe(data => {\n        this.grid = data;\n        this.generationNumber++;\n        // compute population\n        // tslint:disable-next-line: no-shadowed-variable\n        const pop = this.grid.reduce((pop, row) => {\n          return pop + row.filter(cell => cell.isAlive()).length;\n        }, 0);\n        this.population = pop;\n        // compute max hystory for heatmap\n        const max = Math.max.apply(Math, this.grid.map(row => {\n          return Math.max.apply(Math, row.map(cell => {\n            return cell.countALive;\n          }));\n        }));\n        this.maxHistoryValue = max;\n        // console.log(data);\n      }, error => {\n        console.log(error);\n      });\n      this.templateSubcription = this.templateService.templateBoardsSubject.subscribe(data => {\n        this.templates = data;\n        this.categories = [];\n        this.templates.forEach(t => {\n          this.categories.push(t.category);\n        });\n        this.categories = this.categories.reduce((a, b) => {\n          if (a.indexOf(b) < 0) {\n            a.push(b);\n          }\n          return a;\n        }, []);\n        // console.log(this.categories);\n      }, error => {\n        console.log(error);\n      });\n      this.templateService.getAllTemplates();\n      this.rulesStr = this.boardService.getRules().map(r => r.name);\n      this.selectedRule = this.boardService.getRules().find(r => r.name === this.selectedRuleStr);\n      this.boardService.generateRandomBoard(30, 30, this.selectedRule);\n      this.generationNumber = 0;\n    }\n    ngOnDestroy() {\n      this.gridSubcription.unsubscribe();\n      if (this.counterSubscription != null) {\n        this.counterSubscription.unsubscribe();\n      }\n      this.templateSubcription.unsubscribe();\n    }\n    onToggleMouseOver(r, c, event) {\n      // console.log(event);\n      if (event.buttons === 1) {\n        this.boardService.toggle(r, c);\n        this.generationNumber = 0;\n      }\n    }\n    onToggleClick(r, c, event) {\n      // console.log(event);\n      this.boardService.toggle(r, c);\n      this.generationNumber = 0;\n    }\n    onRunAnimation() {\n      const counter = interval(this.speed.value);\n      this.counterSubscription = counter.subscribe(value => {\n        this.boardService.iterateGeneration();\n      }, error => {\n        console.log('Uh-oh, an error occurred! : ' + error);\n      }, () => {\n        console.log('Observable complete!');\n      });\n      this.running = true;\n    }\n    onStopAnimation() {\n      if (this.counterSubscription != null) {\n        this.counterSubscription.unsubscribe();\n      }\n      this.running = false;\n    }\n    onChangeAnimationSpeed() {\n      if (this.running) {\n        this.onStopAnimation();\n        this.onRunAnimation();\n      }\n    }\n    onClearBoard() {\n      if (this.running) {\n        this.onStopAnimation();\n      }\n      this.boardService.generatedEmptyBoard(100, 100, this.selectedRule);\n      this.generationNumber = 0;\n    }\n    onMenuTemplate(t) {\n      this.onStopAnimation();\n      // console.log(t);\n      this.boardService.generateTemplateBoard(t, this.selectedRule);\n    }\n    getCellColor(cell) {\n      if (this.colorMode != null) {\n        if (this.colorMode.name === 'Classique') {\n          return this.getClassicColor(cell);\n        }\n        if (this.colorMode.name === 'Evolué') {\n          return this.getEvolveColor(cell);\n        }\n        if (this.colorMode.name === 'HeatMap') {\n          return this.getHeatMapColor(cell);\n        }\n      }\n    }\n    getHeatMapColor(cell) {\n      const v = (1.0 - cell.countALive / this.maxHistoryValue) * 240;\n      // tslint:disable-next-line: prefer-const\n      let hal = 'hsl(' + v + ', 100%, 50%)';\n      return hal;\n    }\n    getEvolveColor(cell) {\n      if (cell.state === State.None) {\n        // dead\n        return 'white';\n      } else {\n        // alive\n        if (cell.previousGenerationState === State.None && cell.nextGenerationState === State.ALive) {\n          // borning\n          return 'green';\n        }\n        if (cell.previousGenerationState === State.None && cell.nextGenerationState === State.None) {\n          // live only 1 generation\n          return 'yellow';\n        }\n        if (cell.previousGenerationState === State.ALive && cell.nextGenerationState === State.None) {\n          // dying\n          return 'red';\n        }\n        if (cell.previousGenerationState === State.ALive && cell.nextGenerationState === State.ALive) {\n          // alive\n          return 'blue';\n        }\n      }\n    }\n    getClassicColor(cell) {\n      if (cell.state === State.None) {\n        // dead\n        return 'white';\n      } else {\n        // alive\n        return 'black';\n      }\n    }\n    onRuleChange() {\n      // console.log(this.selectedRule);\n      this.onStopAnimation();\n      this.boardService.changeRule(this.selectedRule);\n    }\n    onRuleChangeStr() {\n      // console.log(this.selectedRuleStr);\n      this.selectedRule = this.boardService.getRules().find(r => r.name === this.selectedRuleStr);\n      this.onStopAnimation();\n      this.boardService.changeRule(this.selectedRule);\n    }\n    onMouseOverCategory(cat) {\n      this.templatesFiltered = this.templates.filter(t => t.category === cat);\n    }\n    static #_ = this.ɵfac = function BoardComponent_Factory(t) {\n      return new (t || BoardComponent)(i0.ɵɵdirectiveInject(i1.BoardService), i0.ɵɵdirectiveInject(i2.TemplateService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BoardComponent,\n      selectors: [[\"gol-board\"]],\n      viewQuery: function BoardComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pixiContainer = _t.first);\n        }\n      },\n      decls: 35,\n      vars: 16,\n      consts: [[\"template\", \"matMenu\"], [\"category\", \"matMenu\"], [1, \"container\"], [\"mat-button\", \"\", 3, \"matMenuTriggerFor\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-menu-item\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"dataSource\"], [1, \"center\"], [3, \"selectedItemChange\", \"values\", \"selectedItem\"], [\"for\", \"regle-select\"], [\"id\", \"regle-select\", 3, \"ngModelChange\", \"valueChange\", \"ngModel\", \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"label\", \"Run !\", 3, \"click\", 4, \"ngIf\"], [\"label\", \"Stop !\", 3, \"click\", 4, \"ngIf\"], [\"label\", \"Clear board\", 3, \"click\"], [\"mat-menu-item\", \"\", 3, \"mouseover\", \"matMenuTriggerFor\"], [\"mat-menu-item\", \"\", 3, \"click\"], [3, \"ngStyle\", \"mouseover\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"mouseover\", \"click\", \"ngStyle\"], [3, \"value\"], [\"label\", \"Run !\", 3, \"click\"], [\"label\", \"Stop !\", 3, \"click\"]],\n      template: function BoardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 2)(2, \"button\", 3);\n          i0.ɵɵtext(3, \"Template\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"mat-menu\", null, 0);\n          i0.ɵɵtemplate(6, BoardComponent_ng_container_6_Template, 3, 2, \"ng-container\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"mat-menu\", null, 1);\n          i0.ɵɵtemplate(9, BoardComponent_button_9_Template, 2, 1, \"button\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 2)(11, \"p\");\n          i0.ɵɵtext(12, \"TREE\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"mat-tree\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"br\");\n          i0.ɵɵelementStart(15, \"div\", 2)(16, \"table\", 7)(17, \"caption\");\n          i0.ɵɵtext(18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"tbody\");\n          i0.ɵɵtemplate(20, BoardComponent_tr_20_Template, 2, 1, \"tr\", 4);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(21, \"br\");\n          i0.ɵɵelementStart(22, \"div\")(23, \"gol-toogle-buttons\", 8);\n          i0.ɵɵtwoWayListener(\"selectedItemChange\", function BoardComponent_Template_gol_toogle_buttons_selectedItemChange_23_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.speed, $event) || (ctx.speed = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵlistener(\"selectedItemChange\", function BoardComponent_Template_gol_toogle_buttons_selectedItemChange_23_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onChangeAnimationSpeed());\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(24, \"div\")(25, \"gol-toogle-buttons\", 8);\n          i0.ɵɵtwoWayListener(\"selectedItemChange\", function BoardComponent_Template_gol_toogle_buttons_selectedItemChange_25_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.colorMode, $event) || (ctx.colorMode = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(26, \"div\")(27, \"label\", 9);\n          i0.ɵɵtext(28, \"R\\u00E8gles: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"select\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function BoardComponent_Template_select_ngModelChange_29_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.selectedRuleStr, $event) || (ctx.selectedRuleStr = $event);\n            return i0.ɵɵresetView($event);\n          })(\"valueChange\", function BoardComponent_Template_select_valueChange_29_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.selectedRuleStr, $event) || (ctx.selectedRuleStr = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵlistener(\"ngModelChange\", function BoardComponent_Template_select_ngModelChange_29_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onRuleChangeStr());\n          });\n          i0.ɵɵtemplate(30, BoardComponent_option_30_Template, 2, 2, \"option\", 11);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\");\n          i0.ɵɵtemplate(32, BoardComponent_gol_neon_button_32_Template, 1, 0, \"gol-neon-button\", 12)(33, BoardComponent_gol_neon_button_33_Template, 1, 0, \"gol-neon-button\", 13);\n          i0.ɵɵelementStart(34, \"gol-neon-button\", 14);\n          i0.ɵɵlistener(\"click\", function BoardComponent_Template_gol_neon_button_click_34_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.onClearBoard());\n          });\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          const template_r15 = i0.ɵɵreference(5);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"matMenuTriggerFor\", template_r15);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.templatesFiltered);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"dataSource\", ctx.categories);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate2(\"Generation: \", ctx.generationNumber, \" , Population: \", ctx.population, \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.grid);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"values\", ctx.speeds);\n          i0.ɵɵtwoWayProperty(\"selectedItem\", ctx.speed);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"values\", ctx.colorModes);\n          i0.ɵɵtwoWayProperty(\"selectedItem\", ctx.colorMode);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.selectedRuleStr)(\"value\", ctx.selectedRuleStr);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.rulesStr);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", !ctx.running);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.running);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i3.NgStyle, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel, i5.NeonButtonComponent, i6.ToogleButtonsComponent],\n      styles: [\"table[_ngcontent-%COMP%]{border-spacing:0px;width:600px;height:600px;box-shadow:2px 2px 2px #999;border:1px solid black;font-family:consolas}table.center[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto}.container[_ngcontent-%COMP%]{align-items:center;text-align:center}select[_ngcontent-%COMP%]{font-family:consolas;color:#2196f3;text-transform:uppercase;letter-spacing:4px;background:#031321;border:1px solid #031321}.mat-menu-trigger[_ngcontent-%COMP%], .mat-menu-item[_ngcontent-%COMP%]{color:#2196f3;text-transform:uppercase;letter-spacing:4px;font-size:10px;font-family:consolas}button.mat-menu-item[_ngcontent-%COMP%]{background:#031321}button.mat-menu-item[_ngcontent-%COMP%]:hover{color:#255784;background:#2196f3}.clear[_ngcontent-%COMP%]{background-color:#fff}.hexagon[_ngcontent-%COMP%]{border:1px solid black;background:#1a0404;position:relative;padding:0;margin:0;top:0;left:0;height:50%;width:100%}.hexagon[_ngcontent-%COMP%]:after, .hexagon[_ngcontent-%COMP%]:before{background:#1a0404;position:absolute;padding:0;margin:0;top:0;left:0;height:100%;width:100%;content:\\\"\\\";border:1px solid black}.hexagon[_ngcontent-%COMP%]:after{transform:rotate(60deg)}.hexagon[_ngcontent-%COMP%]:before{transform:rotate(-60deg)}.hexagonal[_ngcontent-%COMP%]   table[_ngcontent-%COMP%], tbody[_ngcontent-%COMP%], tr[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:0;margin:0}.hexagonal[_ngcontent-%COMP%]{width:520px;height:600px}.odd-row[_ngcontent-%COMP%]   .hexagon[_ngcontent-%COMP%]{transform:translate(50%)}\"]\n    });\n  }\n  return BoardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}