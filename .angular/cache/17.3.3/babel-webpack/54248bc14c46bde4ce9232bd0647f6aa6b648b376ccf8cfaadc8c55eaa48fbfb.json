{"ast":null,"code":"import { Subject } from 'rxjs/internal/Subject';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TemplateService = /*#__PURE__*/(() => {\n  class TemplateService {\n    constructor(http) {\n      this.http = http;\n      this.url = 'http://localhost:8080/api/v1/templates';\n      this.templateBoards = [];\n      this.templateBoardsSubject = new Subject();\n    }\n    getAllTemplates() {\n      this.http.get(this.url).subscribe(data => {\n        this.templateBoards = [];\n        data.forEach(t => {\n          this.templateBoards.push(this.parseToTemplateBoard(t));\n        });\n        this.templateBoardsSubject.next(this.templateBoards.slice());\n      }, error => {\n        console.log(error);\n      });\n    }\n    parseToTemplateBoard(templateDTO) {\n      const template = {\n        name: templateDTO.name,\n        category: templateDTO.category,\n        height: templateDTO.height,\n        width: templateDTO.width,\n        grid: JSON.parse(templateDTO.grid)\n      };\n      return template;\n    }\n    parseToTemplateDTO(templateBoard) {\n      const template = {\n        id: null,\n        name: templateBoard.name,\n        category: templateBoard.category,\n        height: templateBoard.height,\n        width: templateBoard.width,\n        grid: templateBoard.grid.toString()\n      };\n      return template;\n    }\n    static #_ = this.ɵfac = function TemplateService_Factory(t) {\n      return new (t || TemplateService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TemplateService,\n      factory: TemplateService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TemplateService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}